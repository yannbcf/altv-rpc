import * as alt from "alt-client";
import { z } from "zod";

export const $client = {
    baseObject: z.custom<alt.BaseObject>((val) => val instanceof alt.BaseObject),
    virtualEntityGroup: z.custom<alt.VirtualEntityGroup>((val) => val instanceof alt.VirtualEntityGroup),
    virtualEntity: z.custom<alt.VirtualEntity>((val) => val instanceof alt.VirtualEntity),
    audio: z.custom<alt.Audio>((val) => val instanceof alt.Audio),
    worldObject: z.custom<alt.WorldObject>((val) => val instanceof alt.WorldObject),
    checkpoint: z.custom<alt.Checkpoint>((val) => val instanceof alt.Checkpoint),
    entity: z.custom<alt.Entity>((val) => val instanceof alt.Entity),
    player: z.custom<alt.Player>((val) => val instanceof alt.Player),
    localPlayer: z.custom<alt.LocalPlayer>((val) => val instanceof alt.LocalPlayer),
    vehicle: z.custom<alt.Vehicle>((val) => val instanceof alt.Vehicle),
    webview: z.custom<alt.WebView>((val) => val instanceof alt.WebView),
    worker: z.custom<alt.Worker>((val) => val instanceof alt.Worker),
    blip: z.custom<alt.Blip>((val) => val instanceof alt.Blip),
    areaBlip: z.custom<alt.AreaBlip>((val) => val instanceof alt.AreaBlip),
    radiusBlip: z.custom<alt.RadiusBlip>((val) => val instanceof alt.RadiusBlip),
    pointBlip: z.custom<alt.PointBlip>((val) => val instanceof alt.PointBlip),
    handlingData: z.custom<alt.HandlingData>((val) => val instanceof alt.HandlingData),
    mapZoomData: z.custom<alt.MapZoomData>((val) => val instanceof alt.MapZoomData),

    localStorage: z.custom<alt.LocalStorage>((val) => val instanceof alt.LocalStorage),
    memoryBuffer: z.custom<alt.MemoryBuffer>((val) => val instanceof alt.MemoryBuffer),
    discord: z.custom<alt.Discord>((val) => val instanceof alt.Discord),
    voice: z.custom<alt.Voice>((val) => val instanceof alt.Voice),
    webSocketClient: z.custom<alt.WebSocketClient>((val) => val instanceof alt.WebSocketClient),
    httpClient: z.custom<alt.HttpClient>((val) => val instanceof alt.HttpClient),
    profiler: z.custom<alt.Profiler>((val) => val instanceof alt.Profiler),
    rmlDocument: z.custom<alt.RmlDocument>((val) => val instanceof alt.RmlDocument),
    rmlElement: z.custom<alt.RmlElement>((val) => val instanceof alt.RmlElement),
    utils: z.custom<alt.Utils>((val) => val instanceof alt.Utils),
    focusData: z.custom<alt.FocusData>((val) => val instanceof alt.FocusData),
    weaponData: z.custom<alt.WeaponData>((val) => val instanceof alt.WeaponData),
    object: z.custom<alt.Object>((val) => val instanceof alt.Object),
    weaponObject: z.custom<alt.WeaponObject>((val) => val instanceof alt.WeaponObject),
    networkObject: z.custom<alt.NetworkObject>((val) => val instanceof alt.NetworkObject),
    ped: z.custom<alt.Ped>((val) => val instanceof alt.Ped),
    audioFilter: z.custom<alt.AudioFilter>((val) => val instanceof alt.AudioFilter),
    marker: z.custom<alt.Marker>((val) => val instanceof alt.Marker),

    colshape: z.custom<alt.Colshape>((val) => val instanceof alt.Colshape),
    colshapeCylinder: z.custom<alt.ColshapeCylinder>((val) => val instanceof alt.ColshapeCylinder),
    colshapeSphere: z.custom<alt.ColshapeSphere>((val) => val instanceof alt.ColshapeSphere),
    colshapeCircle: z.custom<alt.ColshapeCircle>((val) => val instanceof alt.ColshapeCircle),
    colshapeCuboid: z.custom<alt.ColshapeCuboid>((val) => val instanceof alt.ColshapeCuboid),
    colshapeRectangle: z.custom<alt.ColshapeRectangle>((val) => val instanceof alt.ColshapeRectangle),
    colshapePolygon: z.custom<alt.ColshapePolygon>((val) => val instanceof alt.ColshapePolygon),
    textLabel: z.custom<alt.TextLabel>((val) => val instanceof alt.TextLabel),
    localVehicle: z.custom<alt.LocalVehicle>((val) => val instanceof alt.LocalVehicle),
    localPed: z.custom<alt.LocalPed>((val) => val instanceof alt.LocalPed),
    font: z.custom<alt.Font>((val) => val instanceof alt.Font),
    vector3: z.custom<alt.Vector3>((val) => val instanceof alt.Vector3),
    vector2: z.custom<alt.Vector2>((val) => val instanceof alt.Vector2),
    quaternion: z.custom<alt.Quaternion>((val) => val instanceof alt.Quaternion),
    rgba: z.custom<alt.RGBA>((val) => val instanceof alt.RGBA),
    file: z.custom<alt.File>((val) => val instanceof alt.File),
    resource: z.custom<alt.Resource>((val) => val instanceof alt.Resource),
};
